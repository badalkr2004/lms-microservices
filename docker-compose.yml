version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: lms-postgres
    environment:
      POSTGRES_DB: lms_db
      POSTGRES_USER: lms_user
      POSTGRES_PASSWORD: lms_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lms-network
    restart: unless-stopped

  # Cache & Message Queue
  redis:
    image: redis:7-alpine
    container_name: lms-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lms-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: deployments/docker/api-gateway.Dockerfile
    container_name: lms-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://lms_user:lms_password@postgres:5432/lms_db
      - REDIS_URL=redis://redis:6379
      - API_GATEWAY_PORT=3000
      - USER_SERVICE_PORT=3001
      - COURSE_SERVICE_PORT=3002
      - PAYMENT_SERVICE_PORT=3003
      - ASSESSMENT_SERVICE_PORT=3004
      - ANALYTICS_SERVICE_PORT=3005
      - NOTIFICATION_SERVICE_PORT=3006
      - LIVE_SESSION_SERVICE_PORT=3007
      - FILE_SERVICE_PORT=3008
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    restart: unless-stopped

  # User Service
  user-service:
    build:
      context: .
      dockerfile: deployments/docker/user-service.Dockerfile
    container_name: lms-user-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://lms_user:lms_password@postgres:5432/lms_db
      - REDIS_URL=redis://redis:6379
      - USER_SERVICE_PORT=3001
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    restart: unless-stopped

  # Course Service
  course-service:
    build:
      context: .
      dockerfile: deployments/docker/course-service.Dockerfile
    container_name: lms-course-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://lms_user:lms_password@postgres:5432/lms_db
      - REDIS_URL=redis://redis:6379
      - COURSE_SERVICE_PORT=3002
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    restart: unless-stopped

  # Assessment Service
  assessment-service:
    build:
      context: .
      dockerfile: deployments/docker/assessment-service.Dockerfile
    container_name: lms-assessment-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://lms_user:lms_password@postgres:5432/lms_db
      - REDIS_URL=redis://redis:6379
      - ASSESSMENT_SERVICE_PORT=3004
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    restart: unless-stopped

networks:
  lms-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
